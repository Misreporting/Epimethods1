{
  "hash": "caeee96aad3a121c2d440299255dabee",
  "result": {
    "markdown": "# Survey data analysis\n\n## Survey types\n\nSimple random survey: every unit in the population has an equal chance of being selected. When we analyze data without accounting for survey design, we treat data as if it were from a simple random sample.\n\nCluster random sample: units are selected within clusters (primary sampling units), such as schools. Because people within a cluster are more similar to each other than to people outside the cluster, failing to account for the primary sampling unit will result in standard deviations that are too small.\n\nStratified sample: the population is stratified before the sample is seleccted (strata), such as region of country (west, northeast, midwest, south).\n\nSimple random samples might be used in a case where the population of interest is small and there's a well-defined dataframe. However, few surveys use simple random samples. Most surveys use all of the above techniques, so surveys come with 3 survey parameters (and sometimes 4). All major survey packages can use survey data.\n\n## Weighting\n\nUnequal probability of selection, such as for an oversample that chooses units from populations of interest are selected with greater probability in order to ensure sufficient power to understand these populations. (probability weights).\n\nPost-stratification weights: not everyone participates in the survey, and weights are estimated to account for the probability that people from each population of interest will participate. Also called non-response weights.\n\nStrata\n\nPrimary sampling unit (PSU)\n\nSurvey weights E.g., probability weights, poststratification weights.\n\nFinite population correction (FPC) Only used when the sample is large relative to the population\n\nPSUs and strata are linked to location, so to protect subjects' privacy, sometimes replicate weights are used instead of PSU and strata. In this case, the PSU and strata are not available.\n\nTo analyze data from surveys, you start out by telling the statistical package which variables identify the strata, PSU, and weights. Then, you analyze the data with commands that are designed to use the survey parameters. Not all commands have been adapted for use with survey data, or they may use arcane syntax. For instance, often it's easier to do a single-variable survey-weighted regression rather than a t-test; these yield the same answer.\n\nIn longitudinal dataset with several waves of data, multiple survey weights are available, and each estimate must use the appropriate survey weight.\n\nIn sum, analyzing survey data with the survey parameters makes estimates representative of the population and ensures that associations are not falsely significant.\n\nDatasets generally come with a document that tells how to analyze the data using survey weights and the other survey features. The document generally gives the exact commands for setting the survey parameters. We use the R survey package to analyze data from the Youth Risk Behavior Survey 20\\`9 We use the document produced by YRBS called \"Software for Analysis of YRBS Data\".\n\nWe use the Stata format because it reliably keeps the labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readstata13)\nlibrary(mosaic)\nlibrary(arm)\nlibrary(survey)\nyrbs=read.dta13(\"yrbs2019.dta\")\ndim(yrbs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13677   235\n```\n:::\n:::\n\n\nHere's the example from the YRBS document. The I protects whatever is inside, so this example yields confidence intervals for frequency of each variable. The reason it's necessary is because the YRBS data is coded 1 = yes and 2 = no. If it were coded 0 vs 1, you could just take the mean.\n\nSet the survey design\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbsdes <- svydesign(id=~psu, weight=~weight, strata=~stratum,data=yrbs, nest=T)\n```\n:::\n\n\nStoring returned value in a variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(eversex <- svyciprop(~I(QN58==1), yrbsdes, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    2.5% 97.5%\nI(QN58 == 1) 0.384 0.354  0.42\n```\n:::\n\n```{.r .cell-code}\n(heroin <- svyciprop(~I(QN52==1), yrbsdes, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                      2.5% 97.5%\nI(QN52 == 1) 0.0177 0.0125  0.02\n```\n:::\n:::\n\n\nNow let's analyze the data from the Epi 5201 fall 2018 final exam. Evaluate the association between water consumption and BMI. I defined a binary variable for water drinking: the variable water3 is coded as 1 for those who drank at least 3 glasses of water per day and 0 for those who drank less than 3 glasses of water per day.\n\nIn the R survey package, when new variables are added, you need to explicitly add the variable to the survey design object. You can do this with the update or transform function. You do not need to use both, only one of these.\n\nThis procedure is a bit cumbersome, but it's a consequence of R's capability to have more than one dataframe in memory at a time. A package such as Stata that can only have one dataset in memory at a time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(svyglm(bmipct ~ Q93, yrbsdes, family=\"gaussian\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsvyglm(formula = bmipct ~ Q93, design = yrbsdes, family = \"gaussian\")\n\nSurvey design:\nsvydesign(id = ~psu, weight = ~weight, strata = ~stratum, data = yrbs, \n    nest = T)\n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                 64.6984     2.0817  31.080   <2e-16 ***\nQ931 to 3 times             -1.9263     2.7900  -0.690   0.4958    \nQ934 to 6 times             -0.3804     2.6769  -0.142   0.8880    \nQ931 time per day           -4.8332     2.8076  -1.721   0.0966 .  \nQ932 times per day          -4.4633     2.4652  -1.811   0.0814 .  \nQ933 times per day          -1.1793     2.3750  -0.497   0.6235    \nQ934 or more times per day   0.8222     2.3210   0.354   0.7259    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 929.5689)\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n\n```{.r .cell-code}\nyrbsdes=update(yrbsdes, water3=qnwater3==1)\nyrbsdes=transform(yrbsdes, water3=qnwater3==1)\nsummary(svyglm(bmipct ~ 0+water3, yrbsdes, family=\"gaussian\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsvyglm(formula = bmipct ~ 0 + water3, design = yrbsdes, family = \"gaussian\")\n\nSurvey design:\nupdate(`_data`, ...)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \nwater3FALSE  61.9491     0.8839   70.09   <2e-16 ***\nwater3TRUE   64.8666     1.0337   62.75   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 931.9661)\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n:::\n\n\nAlternatively, you can add the new variable to your dataframe and then define the survey design object again. I defined the following variables: age was defined as the number of years over age 11 (12 years old is 1, 13 years old is 2, etc.); male gender was 1 for males and 0 for females. Juice, soda, milk, and sports drink were ordered categorical variables with the same categories as water: none, 1-3 times per week, 4-6 times per week, 1 time per day, 2 times per day, 3 times per day, and 4+ times per day. I defined a variable for obese status and evaluated whether obesity was associated with water consumption. Obesity was coded as 1 for adolescents with a BMI percentile over 95, which is considered obese, and 0 for adolescents with BMI percentile under 95.\n\nIf you are defining lots of variables, it's more efficient to define them and then define the survey design object again. Note that we need to repeat the water3 variable definition because we didn't do that one inside the yrbs dataset yet, only directly in the survey object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbs$water3=yrbs$qnwater3==1\n\tyrbs$age = as.numeric(yrbs$Q1)\n\tyrbs$male = yrbs$Q2==\"Male\"\n\tyrbs$sportsdrink=as.numeric(yrbs$Q92)\n\tyrbs$soda = as.numeric(yrbs$Q75)\n\tyrbs$milk = as.numeric(yrbs$Q76)\n\tyrbs$juice=as.numeric(yrbs$Q69)\n\tyrbs$obese=yrbs$qnobese==1\n\t\n\tyrbsdes = svydesign(id=~psu, weight=~weight, strata=~stratum,data=yrbs, nest=TRUE)\n```\n:::\n\n\nI conducted an analysis to predict BMI percentile from whether the respondent reported drinking water at least 3 times per day, adjusting for age; gender; and sports drink, soda, and milk consumption. Interpret the coefficient on water in a sentence: both the coefficient and its significance. Does this result suggest that drinking water at least 3 times per day could lead to weight gain? Explain your answer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 = svyglm (bmipct ~ water3 + age + male + sportsdrink\n+ soda+ milk + juice, yrbsdes)\nsummary(model1, detail=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsvyglm(formula = bmipct ~ water3 + age + male + sportsdrink + \n    soda + milk + juice, design = yrbsdes)\n\nSurvey design:\nsvydesign(id = ~psu, weight = ~weight, strata = ~stratum, data = yrbs, \n    nest = TRUE)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  65.4373     2.6686  24.521  < 2e-16 ***\nwater3TRUE    3.0491     0.8991   3.391  0.00241 ** \nage          -1.0789     0.3323  -3.247  0.00343 ** \nmaleTRUE      0.4771     1.1225   0.425  0.67463    \nsportsdrink   0.4693     0.3295   1.425  0.16717    \nsoda          0.2725     0.3271   0.833  0.41291    \nmilk          0.3044     0.2874   1.059  0.30019    \njuice        -0.1647     0.3298  -0.499  0.62203    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 1022.418)\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n:::\n\n\nLet's calculate the associations in both directions and the statistical significance of the associations. Interpret the relevant percentages in both 2x2 tables to evaluate the associations between obesity and water consumption. We specify the total to be 100 because otherwise the weights make it add up. The sum of the 4 cells is 100%, so the entries are cell percentages. It takes some experimentation to figure out how to get what you want.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvytable(~obese + water3, design=yrbsdes, Ntotal=100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       water3\nobese       FALSE      TRUE\n  FALSE 37.676869 46.696134\n  TRUE   6.769012  8.857985\n```\n:::\n\n```{.r .cell-code}\nsummary(svytable(~ water3 + obese, design=yrbsdes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       obese\nwater3  FALSE TRUE\n  FALSE  3797  682\n  TRUE   4707  893\n\n\tPearson's X^2: Rao & Scott adjustment\n\ndata:  svychisq(~water3 + obese, design = yrbsdes, statistic = \"F\")\nF = 0.25264, ndf = 1, ddf = 37, p-value = 0.6182\n```\n:::\n\n```{.r .cell-code}\nsvyby(~obese, ~water3, design=yrbsdes, svymean, na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      water3 obeseFALSE obeseTRUE se.obeseFALSE se.obeseTRUE\nFALSE  FALSE  0.8477021 0.1522979    0.01150558   0.01150558\nTRUE    TRUE  0.8405522 0.1594478    0.01287206   0.01287206\n```\n:::\n:::\n\n\n57% of adolescents with obesity drink water at least 3 times per day compared with 50% of adolescents without obesity, which is statistically significant with p \\< 0.001. Among those who drink water at least 3 times per day, 16% are obese, versus 13% of those who drink water less than 3 times per day, which is statistically significant with p \\< 0.001. Based on the above analysis, I evaluated whether adolescents with obesity are more likely to drink water at least 3 times per day, controlling for the same variables. What does this model suggest about the relationship between obesity and drinking water at least 3 times a day?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2 =svyglm (water3 ~ obese  + age + male + sportsdrink\n+ soda+ milk + juice, design=yrbsdes, family=binomial)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in eval(family$initialize): non-integer #successes in a binomial glm!\n```\n:::\n\n```{.r .cell-code}\nsummary(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsvyglm(formula = water3 ~ obese + age + male + sportsdrink + \n    soda + milk + juice, design = yrbsdes, family = binomial)\n\nSurvey design:\nsvydesign(id = ~psu, weight = ~weight, strata = ~stratum, data = yrbs, \n    nest = TRUE)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.16636    0.20591   0.808  0.42706    \nobeseTRUE    0.08034    0.10833   0.742  0.46549    \nage          0.02742    0.02935   0.934  0.35938    \nmaleTRUE    -0.07214    0.07554  -0.955  0.34909    \nsportsdrink  0.06991    0.02378   2.940  0.00716 ** \nsoda        -0.25789    0.02189 -11.783 1.82e-11 ***\nmilk         0.08763    0.02478   3.537  0.00168 ** \njuice        0.07316    0.02191   3.339  0.00274 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1.230958)\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\ncbind(exp(coef(model2)), exp(confint(model2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                          2.5 %    97.5 %\n(Intercept) 1.1809985 0.7721260 1.8063858\nobeseTRUE   1.0836588 0.8665506 1.3551620\nage         1.0278036 0.9673959 1.0919834\nmaleTRUE    0.9303978 0.7960836 1.0873733\nsportsdrink 1.0724135 1.0210448 1.1263665\nsoda        0.7726791 0.7385517 0.8083834\nmilk        1.0915851 1.0371656 1.1488601\njuice       1.0759018 1.0283301 1.1256742\n```\n:::\n:::\n\n\nAdolescents with obesity have 40% greater odds of drinking water at least 3 times per day than adolescents without obesity, controlling for age, gender, and other fluid consumption (OR=1.40, 95% CI (1.19, 1.64)).\n\n## In class exercises\n\n1.  Use the Youth Risk Behavior Study (YRBS) and codebook on the course website to do the following analyses:\n\n\n```{=html}\n<!-- -->\n```\n\n(a) Read in the data.\n(b) Define the survey design. (See page 49 of the codebook.) Note that you may have to do this again if you define more variables within the YRBS dataframe.\n(c) Look at the variable for whether a student carried a gun to school at least once in the past 30 days. If the variable is not suitable for analysis, add a variable to the YRBS dataframe for whether a student carried a gun to school at least once in the past 30 days and look at the summary to make sure that you defined it properly. (table or tally command)\n(d) Do the same thing for whether a student missed school at least once in the past 30 days because they felt unsafe.\n(e) If you defined new variables, define the survey design (again --- you need it to include any new variables.)\n(f) Summarize the gun variable as mean and standard deviation, without accounting for survey characteristics. Summarize the gun variable as mean and standard deviation, accounting for survey characteristics. Describe the differences between the survey- adjusted and unadjusted.\n(g) Predict whether someone who missed school due to feeling unsafe is more likely to carry a gun with and without accounting for survey characteristics. Interpret each finding. Describe the differences between the survey-adjusted and unadjusted.\n(h) Using the codebook, add potential confounders to your model. Is the association still significant?\n\n### Suggested answers\n\nCarry gun at least once in past 30 days\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbs$gun30d=yrbs$QN12==1\ntally(gun30d~Q12, data=yrbs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Q12\ngun30d  0 days 1 day 2 or 3 days 4 or 5 days 6 or more days <NA>\n  TRUE       0   310         356         148            589    0\n  FALSE   9141     0           0           0              0    0\n  <NA>       0     0           0           0              0 3133\n```\n:::\n:::\n\n\nMissed school at least once in 30 days because felt unsafe Not go to school because felt unsafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbs$unsafe.missed.school30d=yrbs$QN15==1\ntally(unsafe.missed.school30d~Q15, data=yrbs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       Q15\nunsafe.missed.school30d 0 days 1 day 2 or 3 days 4 or 5 days 6 or more days\n                  TRUE       0   615         402         102            151\n                  FALSE  12331     0           0           0              0\n                  <NA>       0     0           0           0              0\n                       Q15\nunsafe.missed.school30d  <NA>\n                  TRUE      0\n                  FALSE     0\n                  <NA>     76\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbs.design =svydesign(id=~psu, strata=~stratum, weights=~weight, data=yrbs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsvymean(~gun30d, yrbs.design, na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               mean     SE\ngun30dFALSE 0.86841 0.0065\ngun30dTRUE  0.13159 0.0065\n```\n:::\n\n```{.r .cell-code}\nmean(yrbs$gun30d, na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1330615\n```\n:::\n\n```{.r .cell-code}\nsd(yrbs$gun30d, na.rm=T)/sqrt(length(yrbs$gun30d))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.002904327\n```\n:::\n\n```{.r .cell-code}\nsummary(svyglm(gun30d~unsafe.missed.school30d, yrbs.design, family=binomial(link=\"logit\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in eval(family$initialize): non-integer #successes in a binomial glm!\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsvyglm(formula = gun30d ~ unsafe.missed.school30d, design = yrbs.design, \n    family = binomial(link = \"logit\"))\n\nSurvey design:\nsvydesign(id = ~psu, strata = ~stratum, weights = ~weight, data = yrbs)\n\nCoefficients:\n                            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                 -1.95515    0.05942 -32.906  < 2e-16 ***\nunsafe.missed.school30dTRUE  0.66206    0.14748   4.489 8.71e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1.119776)\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nsummary(glm(gun30d~unsafe.missed.school30d, data=yrbs, family=binomial(link=\"logit\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = gun30d ~ unsafe.missed.school30d, family = binomial(link = \"logit\"), \n    data = yrbs)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.7421  -0.5107  -0.5107  -0.5107   2.0502  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                 -1.97133    0.03119 -63.201   <2e-16 ***\nunsafe.missed.school30dTRUE  0.82260    0.08231   9.994   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 8245.0  on 10521  degrees of freedom\nResidual deviance: 8155.7  on 10520  degrees of freedom\n  (3155 observations deleted due to missingness)\nAIC: 8159.7\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}